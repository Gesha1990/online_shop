import React from 'react';import style from './ProductContainer.module.css';import {connect} from 'react-redux';import Loader from "../Common/Loader";import {withRouter} from "react-router-dom";import {getAllProductsThunkCreator} from "../../redux/productsReducer";import compose from "redux/src/compose";import ProductInDetail from "./ProductInDetail/ProductInDetail";import {getAllCommentsThunkCreator, postCommentThunkCreator} from "../../redux/commentsReducer";import {CommentsReduxForm} from "./CommentsForm/CommentsForm";import ReactStars from "./CommentsForm/ReactStars";import Comment from "./CommentsForm/Comment/Comment";class ProductContainer extends React.Component {  constructor() {    super();    this.state = {      noAthorization: false    }  }  componentDidMount() {    let productId = this.props.match.params.productId;    this.props.getAllProductsThunkCreator(productId)    this.props.getAllCommentsThunkCreator(productId)  }  render() {    let rate;    let ratingChanged = (data) => {      rate = data;    };    let onSubmitReview = ({text}) => {      let product_id = this.props.match.params.productId;      let token = this.props.token;      if (token) {        this.props.postCommentThunkCreator(product_id, token, rate, text)      } else {        this.setState({          noAthorization: true        })      }    };    let comments = this.props.comments.map(comment => {      return <Comment userName={comment.created_by.username}                      created_at={comment.created_at}                      rate={comment.rate}                      text={comment.text} key={comment.id}/>    });    if (!this.props.product) {      return <Loader/>    }    return (      <div className={style.product}>        <div className={style.leftPart}>          <ProductInDetail img={this.props.product.img} title={this.props.product.title}                           text={this.props.product.text}/>        </div>        <div className={style.rightPart}>          <ReactStars ratingChanged={ratingChanged}/>          <CommentsReduxForm onSubmit={onSubmitReview} comments={this.props.comments}/>          {this.state.noAthorization && <div className={style.signError}>You should sign in first</div>}          <h3>Reviews</h3>          <ul>            {comments}          </ul>        </div>      </div>    )  }}const mapStateToProps = (state) => {  return {    isLoaded: state.productsPage.isLoaded,    product: state.productsPage.product[0],    comments: state.commentsPage.comments,    token: state.auth.token,  }}export default compose(  withRouter,  connect(mapStateToProps, {getAllProductsThunkCreator, getAllCommentsThunkCreator, postCommentThunkCreator}  ))(ProductContainer);